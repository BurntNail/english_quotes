name: Build Release Rust for all platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{matrix.job.os}}
    runs-on: ${{matrix.job.os}}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {target: aarch64-unknown-linux-gnu, os: ubuntu-latest, use-cross: true }
          - {target: x86_64-apple-darwin, os: macos-latest}
          - {target: x86_64-pc-windows-gnu, os: windows-latest}
    steps:
    - name: Checkout Source code
      uses: actions/checkout@v2
    - name: Install latest Rust
      uses: actions-rs/toolchain@v1
      with: 
        target: ${{matrix.job.target}}
        toolchain: stable
        override: true
        profile: minimal
    - name: Cargo Cache
      uses: actions/cache@v1
      with:
        path: ~/.cargo
        key: ${{ matrix.job.os }}-cargo-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ matrix.job.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          ${{ matrix.job.os }}-cargo
    - name: Cargo Target Cache
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ matrix.job.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ matrix.job.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          ${{ matrix.job.os }}-cargo-target
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{matrix.job.use-cross}}
        commands: build
        args: --locked --release --target=${{matrix.job.target}} --all-targets
    - name: Upload TUI Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TUI_${{matrix.job.os}}
        path: target/release/english_quotes_tu*
    - name: Upload GUI Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: GUI_${{matrix.job.os}}
        path: target/release/english_quotes_egu*
